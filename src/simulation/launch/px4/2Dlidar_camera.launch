<launch>
    <!-- vehicle pose -->
    <arg name="x" default="10"/>
    <arg name="y" default="0"/>
    <arg name="z" default="1"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="-1.61"/>
    
   
    <arg name="gui" default="true"/>
    <arg name="ns" default="/"/>
    <arg name="model" default="iris_2Dlidar_camera"/>
    <arg name="car" default="$(find prius_description)/urdf/prius.urdf"/>
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <arg name="gcs_url" default="" />   <!-- GCS link is provided by SITL -->
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="vehicle" default="iris"/>

    <param name="use_sim_time" value="true" />

  <!-- Define a static transform from a camera internal frame to the base_link for every camera used -->
  <node pkg="tf" type="static_transform_publisher" name="tf_3Dlidar"
          args="0 0 0 0 0 0 base_link 2Dlidar_link 10"/>

  <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera"
          args="0 0 0 0 -3.14 0 base_link depth_camera_link 10"/>

  <node pkg="tf" type="static_transform_publisher" name="tf_realsense_camera"
          args="0 0 0 -1.57 0 -1.57 base_link realsense_camera_link 10"/>

  <node pkg="tf" type="static_transform_publisher" name="tf_irlock_camera"
          args="0 0 0 -1.57 0 -1.57 base_link irlock_camera_link 10"/>

    <!-- Ros transformation -->
    <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
          args="0 0 0 0 0 0 world odom 10"/>

    <!-- Launch PX4 SITL -->
    <include file="/home/mcx/gaas_ws/src/Firmware/launch/px4.launch">
        <arg name="vehicle" value="$(arg vehicle)"/>
    </include>

    <!-- Launch MavROS -->
    <group ns="$(arg ns)">
        <include file="$(find mavros)/launch/node.launch">
            <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
            <!-- Need to change the config file to get the tf topic and get local position in terms of local origin -->
            <arg name="config_yaml" value="$(find simulation)/resource/px4_config.yaml" />
            <arg name="fcu_url" value="$(arg fcu_url)" />
            <arg name="gcs_url" value="$(arg gcs_url)" />
            <arg name="tgt_system" value="$(arg tgt_system)" />
            <arg name="tgt_component" value="$(arg tgt_component)" />
        </include>
    </group>


    <!-- Spawn vehicle model -->
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-sdf -database $(arg model) -model $(arg vehicle) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)">
    </node>
    <!-- RViz -->
    <node pkg="rviz" type="rviz" output="screen" name="rviz" respawn="true"
          args="-d $(find simulation)/resource/px4_model.rviz" />

  <arg name="model1" default="$(find simulation)/urdf/car/urdf/prius_os1.urdf"/>
 

  <param name="robot_description" textfile="$(arg model1)"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="verbose" value="true"/>
    <arg name="world_name" value="$(find simulation)/worlds/mcity.world"/> 
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
    <!-- <remap from="robot_description" to="different_robot_description" /> -->
    <!-- <remap from="joint_states" to="/prius/joint_states" /> -->
  </node>
  <node pkg="fake_localization" type="fake_localization" name="fake_localization">
    <!-- <remap from="base_pose_ground_truth" to="/prius/base_pose_ground_truth"/> -->
  </node>
  <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="0 0 0 0 0 0 odom base_link"/>
  <node pkg="car_demo" type="joystick_translator" name="joystick_translator"/>

  <!-- Run two joy nodes publishing to the same topic, just to cover two possible joystick locations -->
  <node pkg="joy" type="joy_node" name="joy_node0">
    <param name="dev" value="/dev/input/js0"/>
  </node>
  <!--
  <node pkg="joy" type="joy_node" name="joy_node1">
    <param name="dev" value="/dev/input/js1"/>
  </node>
  -->

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 0 -y -0 -z 0.5 -model prius"/>

</launch>
